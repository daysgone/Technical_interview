import unittest
from sudoku2 import sudoku2AWice


class MyTestCase(unittest.TestCase):
    def test_1(self):
        print 'test1'
        grid = [[".", ".", ".", "1", "4", ".", ".", "2", "."],
                [".", ".", "6", ".", ".", ".", ".", ".", "."],
                [".", ".", ".", ".", ".", ".", ".", ".", "."],
                [".", ".", "1", ".", ".", ".", ".", ".", "."],
                [".", "6", "7", ".", ".", ".", ".", ".", "9"],
                [".", ".", ".", ".", ".", ".", "8", "1", "."],
                [".", "3", ".", ".", ".", ".", ".", ".", "6"],
                [".", ".", ".", ".", ".", "7", ".", ".", "."],
                [".", ".", ".", "5", ".", ".", ".", "7", "."]]
        self.assertTrue(sudoku2AWice(grid))

    def test_2(self):
        print 'test2'
        grid = [[".",".",".",".","2",".",".","9","."],
             [".",".",".",".","6",".",".",".","."],
             ["7","1",".",".","7","5",".",".","."],
             [".","7",".",".",".",".",".",".","."],
             [".",".",".",".","8","3",".",".","."],
             [".",".","8",".",".","7",".","6","."],
             [".",".",".",".",".","2",".",".","."],
             [".","1",".","2",".",".",".",".","."],
             [".","2",".",".","3",".",".",".","."]]
        self.assertFalse(sudoku2AWice(grid))

    def test_3(self):
        print 'test3'
        grid = [[".", ".", "4", ".", ".", ".", "6", "3", "."],
             [".", ".", ".", ".", ".", ".", ".", ".", "."],
             ["5", ".", ".", ".", ".", ".", ".", "9", "."],
             [".", ".", ".", "5", "6", ".", ".", ".", "."],
             ["4", ".", "3", ".", ".", ".", ".", ".", "1"],
             [".", ".", ".", "7", ".", ".", ".", ".", "."],
             [".", ".", ".", "5", ".", ".", ".", ".", "."],
             [".", ".", ".", ".", ".", ".", ".", ".", "."],
             [".", ".", ".", ".", ".", ".", ".", ".", "."]]
        self.assertFalse(sudoku2AWice(grid))

    def test_4(self):
        print 'test4'
        grid = [[".",".",".",".",".",".",".",".","2"],
                [".",".",".",".",".",".","6",".","."],
                [".",".","1","4",".",".","8",".","."],
                [".",".",".",".",".",".",".",".","."],
                [".",".",".",".",".",".",".",".","."],
                [".",".",".",".","3",".",".",".","."],
                ["5",".","8","6",".",".",".",".","."],
                [".","9",".",".",".",".","4",".","."],
                [".",".",".",".","5",".",".",".","."]]
        self.assertTrue(sudoku2AWice(grid))

    def test_7(self):
        print 'test7'
        grid = [["7",".",".",".","4",".",".",".","."],
             [".",".",".","8","6","5",".",".","."],
             [".","1",".","2",".",".",".",".","."],
             [".",".",".",".",".","9",".",".","."],
             [".",".",".",".","5",".","5",".","."],
             [".",".",".",".",".",".",".",".","."],
             [".",".",".",".",".",".","2",".","."],
             [".",".",".",".",".",".",".",".","."],
             [".",".",".",".",".",".",".",".","."]]
        self.assertFalse(sudoku2AWice(grid))

    def test_20(self):
        print 'test20'
        grid = [[".",".",".",".",".",".","8","3","."],
                ["2",".",".",".",".",".",".",".","."],
                ["7",".",".",".",".","7",".","9","5"],
                [".",".",".","1",".",".",".",".","2"],
                [".","8",".","9",".",".",".",".","."],
                [".",".","5","1","9",".",".",".","."],
                ["5",".",".",".",".",".",".",".","."],
                [".",".",".",".",".",".",".",".","."],
                [".",".",".",".",".",".",".",".","."]]
        self.assertFalse(sudoku2AWice(grid))


if __name__ == '__main__':
    unittest.main()


